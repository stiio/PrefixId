// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Stio.Sample.Data.Context;

#nullable disable

namespace Stio.Sample.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Stio.Sample.Data.Models.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_books");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("Stio.Sample.Data.Models.Comment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("id");

                    b.Property<string>("BookId")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("book_id");

                    b.Property<string>("Text")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_comments");

                    b.HasIndex("BookId")
                        .HasDatabaseName("ix_comments_book_id");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("Stio.Sample.Data.Models.Comment", b =>
                {
                    b.HasOne("Stio.Sample.Data.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .HasConstraintName("fk_comments_books_book_id");

                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
